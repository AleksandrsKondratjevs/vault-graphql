# ScandiPWA - Progressive Web App for Magento
#
# Copyright © Scandiweb, Inc. All rights reserved.
# See LICENSE for license details.
#
# @license OSL-3.0 (Open Software License ("OSL") v. 3.0)
# @package scandipwa/quote-graphql
# @link https://github.com/scandipwa/quote-graphql
#
# Copyright © Magento, Inc. All rights reserved.
# See COPYING.txt for license details.

type Mutation {
    deletePaymentToken(public_hash: String!): DeletePaymentTokenOutput @resolver(class: "\\ScandiPWA\\VaultGraphQl\\Model\\Resolver\\DeletePaymentToken") @doc(description:"Delete a customer payment token")
}

type DeletePaymentTokenOutput {
    result: Boolean!
    customerPaymentTokens: CustomerPaymentTokens @resolver(class: "\\ScandiPWA\\VaultGraphQl\\Model\\Resolver\\PaymentTokens")
}

type Query {
    customerPaymentTokens: CustomerPaymentTokens @doc(description: "Return a list of customer payment tokens") @resolver(class: "\\ScandiPWA\\VaultGraphQl\\Model\\Resolver\\PaymentTokens") @cache(cacheable: false)
}

type CustomerPaymentTokens @resolver(class: "\\ScandiPWA\\VaultGraphQl\\Model\\Resolver\\PaymentTokens") {
    items: [PaymentToken]! @doc(description: "An array of payment tokens")
}

type PaymentToken @doc(description: "The stored payment method available to the customer") {
    public_hash: String! @doc(description: "The public hash of the token")
    payment_method_code: String! @doc(description: "The payment method code associated with the token")
    type: PaymentTokenTypeEnum!
    details: Details @doc(description: "Stored account details")
}

type Details {
    type: String
    maskedCC: String
    expirationDate: String
}

extend type StoreConfig @doc(description: "The type contains information about a store config") {
    instance_purchase_active: Boolean @doc(description: "Defines if instance purchase is enabled")
}
